name: System-Informer PR

on:
  workflow_dispatch:
  pull_request: 
    types: 
      - opened
      - reopened
      - edited
    branches:
      - master

jobs:

  codeql:

    name: Code Analysis (CodeQL)
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: ["java"]
        # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python', 'ruby' ]
        # The steps will run for each language in the matrix

    steps:

      # Git Checkout
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}

      - name: Autobuild
        uses: github/codeql-action/autobuild@v2

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  mega-linter:

    name: Lint (MegaLinter)
    runs-on: ubuntu-latest

    env:
      # Linter configurations (https://megalinter.github.io/latest/configuration/)
      APPLY_FIXES: all
      APPLY_FIXES_EVENT: pull_request
      APPLY_FIXES_MODE: commit

    steps:

      # Git Checkout
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT || secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      # MegaLinter
      - name: MegaLinter
        id: ml
        uses: megalinter/megalinter/flavors/java@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # ADD YOUR CUSTOM ENV VARIABLES HERE TO OVERRIDE VALUES OF .mega-linter.yml AT THE ROOT OF YOUR REPOSITORY

      # Upload MegaLinter artifacts
      - name: Archive production artifacts
        if: ${{ success() }} || ${{ failure() }}
        uses: actions/upload-artifact@v2
        with:
          name: MegaLinter reports
          path: |
            report
            mega-linter.log

      # Push new commit if applicable
      - name: Prepare commit
        if: steps.ml.outputs.has_updated_sources == 1 && (env.APPLY_FIXES_EVENT == 'all' || env.APPLY_FIXES_EVENT == github.event_name) && env.APPLY_FIXES_MODE == 'commit' && github.ref != 'refs/heads/main' && (github.event_name == 'push' || github.event.pull_request.head.repo.full_name == github.repository) && !contains(github.event.head_commit.message, 'skip fix')
        run: sudo chown -Rc $UID .git/
      - name: Commit and push applied linter fixes
        if: steps.ml.outputs.has_updated_sources == 1 && (env.APPLY_FIXES_EVENT == 'all' || env.APPLY_FIXES_EVENT == github.event_name) && env.APPLY_FIXES_MODE == 'commit' && github.ref != 'refs/heads/main' && (github.event_name == 'push' || github.event.pull_request.head.repo.full_name == github.repository) && !contains(github.event.head_commit.message, 'skip fix')
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          branch: ${{ github.event.pull_request.head.ref || github.head_ref || github.ref }}
          commit_message: "[MegaLinter] Apply linters fixes"

  test-build-scan:

    name: Test, Build & Scan for CVEs
    runs-on: ubuntu-latest
    permissions:
      checks: write
      pull-requests: write

    steps:

      # Git Checkout
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Gradle Unit Tests
        run: ./gradlew tests

      # PPublishes the test results
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        # Runs even if the tests fail
        if: always()
        with:
          files: "**/TEST-*.xml"
