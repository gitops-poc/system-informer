---
name: System-Informer master

on: # yamllint disable-line rule:truthy
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  codeql:
    uses: gitops-poc/workflows/.github/workflows/code-analysis.yml@master

  test:
    uses: gitops-poc/workflows/.github/workflows/gradle-tests.yml@master

  build-scan-push:
    needs: test
    permissions:
      checks: write
      pull-requests: write
      packages: write
      security-events: write
    uses: gitops-poc/workflows/.github/workflows/build-scan-push.yml@master
    with:
      image_tags: |
        type=raw,value={{sha}}

  update-manifests-dev:
    name: Update dev manifests
    environment: dev
    runs-on: ubuntu-latest
    outputs:
      sandbox-commit: ${{ steps.commit_push_sandbox.outputs.sandbox-commit }}
    env:
      ARGO_DIR: argo
    steps:
      - name: Add argo repo ssh key
        run: |
          mkdir "$HOME/.ssh/"
          ls -la "$HOME"
          echo "$SSH_KEY" > "$HOME/.ssh/id_rsa"
          chmod 600 "$HOME/.ssh/id_rsa"
        shell: bash
        env:
          SSH_KEY: ${{secrets.ARGO_SSH_KEY}}
      - name: Clone argo repo
        run: |
          git clone git@github.com:gitops-poc/argo.git "$ARGO_DIR"
      - name: Update dev image
        uses: mikefarah/yq@master
        with:
          cmd: yq -i '.spec.template.spec.containers.[0].image="ghcr.io/gitops-poc/systeminformer:test"' "$ARGO_DIR/system-informer/overlays/dev/deployment.yaml"
      - name: Output yaml to be applied
        working-directory: ${{ env.ARGO_DIR }}
        run: |
          kustomize build system-informer/overlays/dev
      - name: Commit and push changes
        working-directory: ${{ env.ARGO_DIR }}
        id: commit_push_sandbox
        shell: bash
        run: |
          set -e
          git config user.name github-actions
          git config user.email github-actions@github.com
          if [[ $(git ls-files . -m --exclude-standard -v | wc -c) -ne 0 ]]; then
            git diff
            git add .
            git commit -m "ci: update dev image"
            git push
          fi
          echo "::set-output name=sandbox-commit::$(git rev-parse HEAD)"
      - name: Echo previous step output
        run: |
          echo ${{steps.commit_push_sandbox.outputs.sandbox-commit}}

  sync-dev:
    name: Sync dev changes
    needs: update-manifests-dev
    environment: dev
    runs-on: ubuntu-latest
    env:
      ARGO_DIR: argo
    steps:
      - name: Install argocd cli
        run: |
          VERSION=v2.4.7
          curl -sSL -o /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/download/$VERSION/argocd-linux-amd64
          chmod +x /usr/local/bin/argocd
      - name: Sync argocd app
        # TODO: switch SANDBOX_IWLS_TOKEN to an environment secret
        env:
          ACCESS_TOKEN: ${{secrets.SANDBOX_IWLS_TOKEN}}
          ARGOCD_SERVER: nginx.sandbox.azure.cloud-nuage.dfo-mpo.gc.ca
        run: |
          argocd app sync systeminformer --auth-token "$ACCESS_TOKEN" --server "$ARGOCD_SERVER" --grpc-web --async
        continue-on-error: true
      - name: Wait for sync to be done
        env:
          ACCESS_TOKEN: ${{secrets.SANDBOX_IWLS_TOKEN}}
          ARGOCD_SERVER: nginx.sandbox.azure.cloud-nuage.dfo-mpo.gc.ca
        run: |
          argocd app wait systeminformer --auth-token "$ACCESS_TOKEN" --server "$ARGOCD_SERVER" --sync --grpc-web
      - name: Check current revision
        env:
          ACCESS_TOKEN: ${{secrets.SANDBOX_IWLS_TOKEN}}
          ARGOCD_SERVER: nginx.sandbox.azure.cloud-nuage.dfo-mpo.gc.ca
        run: |
          argocd app get systeminformer --auth-token "$ACCESS_TOKEN" --server "$ARGOCD_SERVER" --grpc-web -o json | jq -r .status.sync.revision | xargs test ${{needs.update-manifests-dev.outputs.sandbox-commit}} =
      - name: Check sync status
        env:
          ACCESS_TOKEN: ${{secrets.SANDBOX_IWLS_TOKEN}}
          ARGOCD_SERVER: nginx.sandbox.azure.cloud-nuage.dfo-mpo.gc.ca
        run: |
          argocd app get systeminformer --auth-token "$ACCESS_TOKEN" --server "$ARGOCD_SERVER" --grpc-web -o json | jq -r .status.sync.status | xargs test "Synced" =
      - name: Check health status
        env:
          ACCESS_TOKEN: ${{secrets.SANDBOX_IWLS_TOKEN}}
          ARGOCD_SERVER: nginx.sandbox.azure.cloud-nuage.dfo-mpo.gc.ca
        run: |
          argocd app get systeminformer --auth-token "$ACCESS_TOKEN" --server "$ARGOCD_SERVER" --grpc-web -o json | jq -r .status.health.status | xargs test "Healthy" =

  smoke-dev:
    name: Run smoke tests in dev
    needs: sync-dev
    environment: dev
    runs-on: ubuntu-latest
    steps:
      - name: Run smoke tests
        run: |
          echo "imagine we are running smoke tests"

  update-manifests-test:
    name: Deploy in the test environment
    needs: smoke-dev
    runs-on: ubuntu-latest
    environment: test
    env:
      ARGO_DIR: argo
    steps:
      - name: Add argo repo ssh key
        run: |
          mkdir "$HOME/.ssh/"
          ls -la "$HOME"
          echo "$SSH_KEY" > "$HOME/.ssh/id_rsa"
          chmod 600 "$HOME/.ssh/id_rsa"
        shell: bash
        env:
          SSH_KEY: ${{secrets.ARGO_SSH_KEY}}
      - name: Clone argo repo
        run: |
          git clone git@github.com:gitops-poc/argo.git "$ARGO_DIR"
      - name: Update test image
        uses: mikefarah/yq@master
        with:
          cmd: yq -i '.spec.template.spec.containers.[0].image="ghcr.io/gitops-poc/systeminformer:test"' "$ARGO_DIR/system-informer/overlays/test/deployment.yaml"
      - name: Output yaml to be applied
        working-directory: ${{ env.ARGO_DIR }}
        env:
          ACCESS_TOKEN: ${{secrets.SANDBOX_IWLS_TOKEN}}
          ARGOCD_SERVER: nginx.sandbox.azure.cloud-nuage.dfo-mpo.gc.ca
        run: |
          kustomize build system-informer/overlays/test

  smoke-test:
    name: Run smoke tests in test
    needs: update-manifests-test
    environment: test
    runs-on: ubuntu-latest
    steps:
      - name: Run smoke tests
        run: |
          echo "imagine we are running smoke tests"
